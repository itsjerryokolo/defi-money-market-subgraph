type dmgTransfer @entity {
  "Transaction ID"
    id: ID!
    "Token symbol"
    symbol: String!
    "Address transfering DMG"
    transferedFrom: Bytes!
    "Adress receiving DMG"
    transferedTo: Bytes!
    """Transfered value in ETH.
    Transfers not in ETH will return 0"""
    amountTransfered: BigInt!
    "Total supply of DMG at transaction date"
    totalSupply: BigInt!
    "Transaction date"
    transactionDate: BigInt!
    "Block number"
    transactionBlock: BigInt!

}
#-------------------------------------dmgTransfer end


#-------------------------------------mDai start
type mDaiMint @entity{
  "Transaction ID"
    id: ID!
    "Token symbol"
    symbol: String!
    "Contract address of mDai"
    tokenAddress: Bytes!
    "Address of the Minter"
    minterAddress: Bytes!
    "Recipient address of mDai being minted"
    recipientAddress: Bytes!
    "Amount minted by Minter"
    amountMinted: BigInt!
    "Total supply of mDai at transaction date"
    totalSupply: BigInt!
    "Transaction date"
    transactionDate: BigInt!
    "Block number"
    transactionBlock: BigInt!  
}

type mDaiRedeem @entity{
  "Transaction ID"
    id: ID!
    "Token symbol"
    symbol: String!
    "Contract address of mDai"
    tokenAddress: Bytes!
    "Address of the Redeemer"
    redeemerAddress: Bytes!
    "Recipient address of mDai being redeemed"
    recipientAddress: Bytes!
    "Amount redeemed by Redeemer"
    amountRedeemed: BigInt!
    "Total supply of mDai at transaction date"
    totalSupply:  BigInt!
    "Transaction date"
    transactionDate: BigInt!
    "Block number"
    transactionBlock: BigInt!
}

type mDaiTransfer @entity {
  "Transaction ID"
    id: ID!
    "Token symbol"
    symbol: String!
    "Address transfering mDai"
    transferedFrom: Bytes!
    "Address receiving mDai"
    transferedTo: Bytes!
    """Transfered value in ETH.
    Transfers not in ETH will return 0"""
    amountTransfered: BigInt!
    "Transaction date"
    transactionDate: BigInt!
    "Block number"
    transactionBlock: BigInt!
}
#-------------------------------------mDai end



#-------------------------------------mUSDC start
type mUSDCMint @entity{
  "Transaction ID"
    id: ID!
    "Token Symbol"
    symbol: String!
    "Contract address of mUSDC"
    tokenAddress: Bytes!
    "Address of the Minter"
    minterAddress: Bytes!
    "Recipient address of mUSDC being minted"
    recipientAddress: Bytes!
    "Amount minted by Minter"
    amountMinted: BigInt!
    "Total supply of mUSDC at transaction date"
    totalSupply: BigInt!
    "Transaction date"
    transactionDate: BigInt!
    "Block number"
    transactionBlock: BigInt!
}

type mUSDCRedeem @entity{
  "Transaction ID"
    id: ID!
    "Token Symbol"
    symbol: String!
    "Contract address of the token"
    tokenAddress: Bytes!
    "Address of the Redeemer"
    redeemerAddress: Bytes!
    "Recipient address of mUSDC being redeemed"
    recipientAddress: Bytes!
    "Amount redeemed by Redeemer"
    amountRedeemed: BigInt!
    "Total supply of mUSDC at transaction date"
    totalSupply: BigInt!
    "Transaction date"
    transactionDate: BigInt!
    "Block number"
    transactionBlock: BigInt!
}
type mUSDCTransfer @entity {
  "Transaction ID"
    id: ID!
    "Token Symbol"
    symbol: String!
    "Address transfering mUSDC"
    transferedFrom: Bytes!
    "Address receiving mUSDC"
    transferedTo: Bytes!
    """Transfered value in ETH.
    Transfers not in ETH will return 0"""
    amountTransfered: BigInt!
    "Transaction date"
    transactionDate: BigInt!
    "Block number"
    transactionBlock: BigInt!
}
#-------------------------------------mUSDC end



#-------------------------------------mETH start
type mETHMint @entity{
  "Transaction ID"
    id: ID!
    "Token symbol"
    symbol: String!
    "Contract address of mETH"
    tokenAddress: Bytes!
    "Address of the Minter"
    minterAddress: Bytes!
    "Recipient address of mETH being minted"
    recipientAddress: Bytes!
    "Amount minted by Minter"
    amountMinted: BigInt!
    "Total supply of mETH at transaction date"
    totalSupply: BigInt!
    "Transaction date"
    transactionDate: BigInt!
    "Block number"
    transactionBlock: BigInt!
}

type mETHRedeem @entity{
  "Transaction ID"
    id: ID!
    "Token symbol"
    symbol: String!
    "Contract address of mETH"
    tokenAddress: Bytes!
    "Address of the Redeemer"
    redeemerAddress: Bytes!
    "Recipient address of mETH being redeemed"
    recipientAddress: Bytes!
    "Amount redeemed by Redeemer"
    amountRedeemed: BigInt!
    "Total supply of mETH at transaction date"
    totalSupply: BigInt!
    "Transaction date"
    transactionDate: BigInt!
    "Block number"
    transactionBlock: BigInt!
}
type mETHTransfer @entity {
  "Transaction ID"
    id: ID!
    "Token symbol"
    symbol: String!
    "Address transfering mETH"
    transferedFrom: Bytes!
    "Address receiving mETH"
    transferedTo: Bytes!
    """Transfered value in ETH.
    Transfers not in ETH will return 0"""
    amountTransfered: BigInt!
    "Transaction date"
    transactionDate: BigInt!
    "Block number"
    transactionBlock: BigInt!
}
#-------------------------------------mETH end

#-------------------------------------mUSDK start
# type mUSDKMint @entity{
#   "Transaction ID"
#     id: ID!
#     "Token symbol"
#     symbol: String!
#     "Contract address of USDK"
#     tokenAddress: Bytes!
#     "Address of the Minter"
#     minterAddress: Bytes!
#     "Recipient address of USDK being minted"
#     recipientAddress: Bytes!
#     "Amount minted by Minter"
#     amountMinted: BigInt!
#     "Total supply of USDK at transaction date"
#     totalSupply: BigInt!
#     "Transaction date"
#     transactionDate: BigInt!
#     "Block number"
#     transactionBlock: BigInt!
# }

# type mUSDKRedeem @entity{
#   "Transaction ID"
#     id: ID!
#     "Token symbol"
#     symbol: String!
#     "Contract address of mUSDK"
#     tokenAddress: Bytes!
#     "Address of the Redeemer"
#     redeemerAddress: Bytes!
#     "Recipient address of mUSDK being redeemed"
#     recipientAddress: Bytes!
#     "Amount redeemed by Redeemer"
#     amountRedeemed: BigInt!
#     "Total supply of USDK at transaction date"
#     totalSupply: BigInt!
#     "Transaction date"
#     transactionDate: BigInt!
#     "Block number"
#     transactionBlock: BigInt!
# }
# type mUSDKTransfer @entity {
#   "Transaction ID"
#     id: ID!
#     "Token symbol"
#     symbol: String!
#     "Address transfering USDK"
#     transferedFrom: Bytes!
#     "Address receiving USDK"
#     transferedTo: Bytes!
#     """Transfered value in ETH.
#     Transfers not in ETH will return 0"""
#     amountTransfered: BigInt!
#     "Transaction date"
#     transactionDate: BigInt!
#     "Block number"
#     transactionBlock: BigInt!
# }
#-------------------------------------mUSDK end


#-------------------------------------mUSDT start
type mUSDTMint @entity{
  "Transaction ID"
    id: ID!
    "Token symbol"
    symbol: String!
    "Contract address of mUSDT"
    tokenAddress: Bytes!
    "Address of the Minter"
    minterAddress: Bytes!
    "Recipient address of mUSDT being minted"
    recipientAddress: Bytes!
    "Amount minted by Minter"
    amountMinted: BigInt!
    "Total supply of mUSDT at transaction date"
    totalSupply: BigInt!
    "Transaction date"
    transactionDate: BigInt!
    "Block number"
    transactionBlock: BigInt!
}

type mUSDTRedeem @entity{
  "Transaction ID"
    id: ID!
    "Token symbol"
    symbol: String!
    "Contract address of mUSDK"
    tokenAddress: Bytes!
    "Address of the Redeemer"
    redeemerAddress: Bytes!
    "Recipient address of mUSDT being redeemed"
    recipientAddress: Bytes!
    "Amount redeemed by Redeemer"
    amountRedeemed: BigInt!
    "Total supply of mUSDT at transaction date"
    totalSupply: BigInt!
    "Transaction date"
    transactionDate: BigInt!
    "Block number"
    transactionBlock: BigInt!
}
type mUSDTTransfer @entity {
  "Transaction ID"
    id: ID!
    "Token symbol"
    symbol: String!
    "Address transfering mUSDT"
    transferedFrom: Bytes!
    "Address receiving mUSDT"
    transferedTo: Bytes!
    """Transfered value in ETH.
    Transfers not in ETH will return 0"""
    amountTransfered: BigInt!
    "Transaction date"
    transactionDate: BigInt!
    "Block number"
    transactionBlock: BigInt!
}
#-------------------------------------mUSDT end


#-------------------------------------governance start
type governanceProposal @entity{
    "Governance Proposal ID"
    id: ID!
    "Title of the proposal"
    title: String!
    "Description of the proposal"
    description: String!
    "Address of proposer"
    proposerAddress: Bytes!
    "Date proposed"
    proposalDate:BigInt!
    "Block at which voting begins"
    startBlock: BigInt!
    "Block at which vote ends"
    endBlock: BigInt!

}
type Vote @entity{
    "Transaction ID"
    id: ID!
    "Governance proposal number"
    governanceProposalID:BigInt!
    "Address of Voter"
    voterAddress: Bytes!
    "For is true, Against is false"
    support: Boolean!
    "DMG used for voting"
    voteAmount: BigInt!
    "Vote date"
    transactionDate:BigInt!

}
