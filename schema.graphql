interface Transfer{
  id: ID!
  sender: Bytes!
  receiver: Bytes!
  amount: BigDecimal!
  contract: Contract
}
interface Block{
  blockNumber: BigInt!
  blockHash: Bytes!
}
interface Transaction{
  timeStamp: BigInt!
  txHash: Bytes!
}
interface Mint{
  id: ID!
  minter: Bytes!
  mintedTo: Bytes!
  minted: BigDecimal!
}
interface Redeem{
  id: ID!
  redeemer: Bytes!
  redeemed: BigDecimal!
}

type Contract @entity {
  id: ID! #contractAddress
  tokenAddress: Bytes!
  symbol: String
  totalSupply: BigInt
}

type Dmg implements Transfer & Block & Transaction @entity {
  id: ID!
  sender: Bytes!
  receiver: Bytes!
  amount: BigDecimal!
  contract: Contract
  blockNumber: BigInt!
  blockHash: Bytes!
  timeStamp: BigInt!
  txHash: Bytes!
  
}
type mDai implements Block & Transaction & Transfer & Redeem & Mint @entity{
  id: ID!
  sender: Bytes!
  receiver: Bytes!
  amount: BigDecimal!
  contract: Contract
  minter: Bytes!
  mintedTo: Bytes!
  minted: BigDecimal!
  redeemer: Bytes!
  redeemed: BigDecimal!
  blockNumber: BigInt!
  blockHash: Bytes!
  timeStamp: BigInt!
  txHash: Bytes!
}

type mEth implements Block & Transaction & Transfer & Redeem & Mint @entity{
  id: ID!
  sender: Bytes!
  receiver: Bytes!
  amount: BigDecimal!
  contract: Contract
  minter: Bytes!
  mintedTo: Bytes!
  minted: BigDecimal!
  redeemer: Bytes!
  redeemed: BigDecimal!
  blockNumber: BigInt!
  blockHash: Bytes!
  timeStamp: BigInt!
  txHash: Bytes!
}

type mUsdc implements Block & Transaction & Transfer & Redeem & Mint @entity{
  id: ID!
  sender: Bytes!
  receiver: Bytes!
  amount: BigDecimal!
  contract: Contract
  minter: Bytes!
  mintedTo: Bytes!
  minted: BigDecimal!
  redeemer: Bytes!
  redeemed: BigDecimal!
  blockNumber: BigInt!
  blockHash: Bytes!
  timeStamp: BigInt!
  txHash: Bytes!
}

type mUsdt implements Block & Transaction & Transfer & Redeem & Mint @entity {
  id: ID!
  sender: Bytes!
  receiver: Bytes!
  amount: BigDecimal!
  contract: Contract
  minter: Bytes!
  mintedTo: Bytes!
  minted: BigDecimal!
  redeemer: Bytes!
  redeemed: BigDecimal!
  blockNumber: BigInt!
  blockHash: Bytes!
  timeStamp: BigInt!
  txHash: Bytes!
}

type Governance @entity{
  "Governance Proposal ID"
  id: ID!
  title: String!
  description: String!
  proposerAddress: Bytes!
  proposalDate:BigInt!
  "Block at which voting begins"
  startBlock: BigInt!
  "Block at which vote ends"
  endBlock: BigInt!
}
type Vote implements Block & Transaction @entity{
  id: ID!
  proposalID: BigInt!
  voterAddress: Bytes!
  support: Boolean!
  amount: BigDecimal!
  blockNumber: BigInt!
  blockHash: Bytes!
  timeStamp: BigInt!
  txHash: Bytes!
}
